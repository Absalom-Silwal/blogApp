{
    "openapi": "3.0.0",
    "info": {
        "title": "Blog App Api",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "absalomsilwal93@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/view/blog/{id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Retrieve a single blog post by ID",
                "operationId": "619eb65f047c4b635edf06cf4fcd829c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the blog post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "description": "Title of the blog post",
                                            "type": "string",
                                            "example": "Sample Blog Title"
                                        },
                                        "body": {
                                            "description": "Body content of the blog post",
                                            "type": "string",
                                            "example": "This is the body of the blog post."
                                        },
                                        "blog_image": {
                                            "description": "URL of the blog post image",
                                            "type": "string",
                                            "example": "http://example.com/image.jpg"
                                        },
                                        "created_at": {
                                            "description": "Timestamp when the blog post was created",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-08-03T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp when the blog post was last updated",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-08-03T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Blog post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create/blog": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Create a new blog post",
                "operationId": "2fe7968f1f09bcef79165b95ab2ff210",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "body"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the blog post",
                                        "type": "string",
                                        "example": "A Sample Blog Post"
                                    },
                                    "body": {
                                        "description": "Body content of the blog post",
                                        "type": "string",
                                        "example": "This is the body of the blog post."
                                    },
                                    "image": {
                                        "description": "Image file for the blog post",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "description": "ID of the blog category",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog created sucessfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog post",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Title of the blog post",
                                                        "type": "string",
                                                        "example": "Sample Blog Title"
                                                    },
                                                    "body": {
                                                        "description": "Body content of the blog post",
                                                        "type": "string",
                                                        "example": "This is the body of the blog post."
                                                    },
                                                    "blog_image": {
                                                        "description": "URL of the blog post image",
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog post was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog post was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "Starting index of the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "to": {
                                            "description": "Ending index of the current page",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL of the pagination link",
                                                        "type": "string",
                                                        "example": "http://example.com/api/get/blog?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label of the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Indicates if the link is for the current page",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get/category": {
            "get": {
                "tags": [
                    "Blog Category"
                ],
                "summary": "Retrieve a list of blog categories",
                "operationId": "81a90e6bad858d8c399800c346406f2f",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of blog categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog category",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the blog category",
                                                        "type": "string",
                                                        "example": "Technology"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog category was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog category was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "First item on the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "to": {
                                            "description": "Last item on the current page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL for the pagination link",
                                                        "type": "string",
                                                        "example": "/api/get/category?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label for the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Whether the pagination link is active",
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/blog/{id}": {
            "put": {
                "tags": [
                    "Blog"
                ],
                "summary": "Update a blog post",
                "operationId": "1ca53e582b6485ea4963a53508c91a68",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "body"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the blog post",
                                        "type": "string",
                                        "example": "Updated Blog Title"
                                    },
                                    "body": {
                                        "description": "Body content of the blog post",
                                        "type": "string",
                                        "example": "This is the updated body content."
                                    },
                                    "image": {
                                        "description": "Updated image file for the blog post",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "description": "ID of the blog category",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog updated sucessfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog post",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Title of the blog post",
                                                        "type": "string",
                                                        "example": "Sample Blog Title"
                                                    },
                                                    "body": {
                                                        "description": "Body content of the blog post",
                                                        "type": "string",
                                                        "example": "This is the body of the blog post."
                                                    },
                                                    "blog_image": {
                                                        "description": "URL of the blog post image",
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog post was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog post was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "Starting index of the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "to": {
                                            "description": "Ending index of the current page",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL of the pagination link",
                                                        "type": "string",
                                                        "example": "http://example.com/api/get/blog?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label of the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Indicates if the link is for the current page",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Blog post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete/blog/{id}": {
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "Delete a blog post",
                "operationId": "385df31d4898b210a9efaace4e9c4e82",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved paginated list of blogs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog post",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Title of the blog post",
                                                        "type": "string",
                                                        "example": "Sample Blog Title"
                                                    },
                                                    "body": {
                                                        "description": "Body content of the blog post",
                                                        "type": "string",
                                                        "example": "This is the body of the blog post."
                                                    },
                                                    "blog_image": {
                                                        "description": "URL of the blog post image",
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog post was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog post was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "Starting index of the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "to": {
                                            "description": "Ending index of the current page",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL of the pagination link",
                                                        "type": "string",
                                                        "example": "http://example.com/api/get/blog?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label of the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Indicates if the link is for the current page",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Blog post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "operationId": "b00c2f1b8cb575735f7e5d90d1944604",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the user's password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The user's ID",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "description": "The user's name",
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "The user's email address",
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "created_at": {
                                            "description": "Timestamp when the user was created",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp when the user was last updated",
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "f3d87e328d740d737014b74e71dca4c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "your_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Authentication token",
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "operationId": "eb46dff4d7a64e46f3439998e1749126",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create/category": {
            "post": {
                "tags": [
                    "Blog Category"
                ],
                "summary": "Create a new blog category",
                "operationId": "aa443daf106fd7c63eb35780fe0bbdfe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the blog category",
                                        "type": "string",
                                        "example": "Technology"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "blog categories created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog category",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the blog category",
                                                        "type": "string",
                                                        "example": "Technology"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog category was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog category was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "First item on the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "to": {
                                            "description": "Last item on the current page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL for the pagination link",
                                                        "type": "string",
                                                        "example": "/api/get/category?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label for the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Whether the pagination link is active",
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Validation failed for category name."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update/category/{id}": {
            "put": {
                "tags": [
                    "Blog Category"
                ],
                "summary": "Update a blog category",
                "operationId": "c5f3b1f6e34fd0986e6b46efc823a137",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "New name of the blog category",
                                        "type": "string",
                                        "example": "Updated Category Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "blog categories updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog category",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the blog category",
                                                        "type": "string",
                                                        "example": "Technology"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog category was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog category was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "First item on the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "to": {
                                            "description": "Last item on the current page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL for the pagination link",
                                                        "type": "string",
                                                        "example": "/api/get/category?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label for the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Whether the pagination link is active",
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid data provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Blog category not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/delete/category/{id}": {
            "delete": {
                "tags": [
                    "Blog Category"
                ],
                "summary": "Delete a blog category",
                "operationId": "192a33ab2eea3469e2d0342c4e72aa6e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "blog categories deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the blog category",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the blog category",
                                                        "type": "string",
                                                        "example": "Technology"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp when the blog category was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp when the blog category was last updated",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-08-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "from": {
                                            "description": "First item on the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "to": {
                                            "description": "Last item on the current page",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "description": "Total number of items",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL for the pagination link",
                                                        "type": "string",
                                                        "example": "/api/get/category?page=2"
                                                    },
                                                    "label": {
                                                        "description": "Label for the pagination link",
                                                        "type": "string",
                                                        "example": "Next"
                                                    },
                                                    "active": {
                                                        "description": "Whether the pagination link is active",
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Blog category not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT Bearer token in the Authorization header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Blog",
            "description": "Blog"
        },
        {
            "name": "Blog Category",
            "description": "Blog Category"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}